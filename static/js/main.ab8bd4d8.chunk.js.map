{"version":3,"sources":["components/Apod.js","components/Last30.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["Apod","props","data","date","desc","type","title","url","className","src","alt","href","height","frameborder","allow","allowfullscreen","Last30","prev","handleClick","visible","previews","map","element","explanation","media_type","thumbnail_url","apod","onClick","event","formatArray","style","display","Header","id","Footer","App","useState","setApod","prevApod","setPrevApod","loading","setLoading","isVisible","setVisible","useEffect","day","Date","today","getFullYear","getMonth","getDate","setDate","monthAgo","fetch","then","response","json","length","prevState","console","log","previewData","width","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab8bd4d8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Apod(props) {\r\n    const { date, desc, type, title, url } = props.data\r\n\r\n    return (\r\n        <div className='apod'>\r\n            <div className='apod-header'>\r\n                <h1>{ title }</h1>\r\n                <p>{ date }</p>\r\n            </div>\r\n            { type === 'image' ? \r\n                <img className='apod-pic' src={ url } alt='Astronomy Pic of the Day' /> : \r\n                <a href={ url } >\r\n                    <iframe className='apod-pic'\r\n                        height='800'\r\n                        src={ url } \r\n                        frameborder=\"0\" \r\n                        title={ title }\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                        allowfullscreen>\r\n                    </iframe>\r\n                </a> \r\n            }\r\n            \r\n            <p className='desc'>{ desc }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Apod","import React from 'react'\r\n\r\nfunction Last30({ prev, handleClick, visible }) {\r\n    // takes an element and pulls out the data needed to make a preview of it and a new apod\r\n    // returns div containing the preview\r\n    function formatArray(element) {\r\n        const { date, explanation, media_type, title, url, thumbnail_url } = element\r\n        const apod = {\r\n            date: date,\r\n            desc: explanation,\r\n            type: media_type,\r\n            title: title,\r\n            url: url\r\n        }\r\n        return (\r\n            <div className='preview'>\r\n                <img src={ media_type === 'image' ? url : thumbnail_url } alt='Preview' onClick={ event => handleClick(apod) } />\r\n                <p>{ date }</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const previews = prev.map(element => formatArray(element))\r\n\r\n    \r\n    return(\r\n        <div className='lastMonth' style={visible ? {display: 'grid'} : {display: 'none'}}>\r\n            { previews }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Last30","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header id='top'>\r\n            <img src='./images/nasa.png' alt='logo' />\r\n            <h1>NASA's Astronomy Picture of the Day</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <h2>Built using: </h2>\r\n            <img src='./images/react-logo.png' alt='react' />\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React,  {useState, useEffect} from 'react'\r\n\r\nimport Apod from './components/Apod'\r\nimport Last30 from './components/Last30'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\n\r\nfunction App() {\r\n    const [apod, setApod] = useState('')\r\n    const [prevApod, setPrevApod] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [isVisible, setVisible] = useState(false)\r\n\r\n    \r\n    \r\n    // if component mounts, then uses the fetch api to get todays apod from NASA's apod api and stores the useful data as an object in state\r\n    // gets last 31 apod's, pops the newest one and sets that to the current display, and stores an array of the last 30 in state\r\n    useEffect(() => {\r\n        setLoading(true)\r\n\r\n        // parsing date into format that api wants\r\n        let day = new Date()\r\n        const today = `${day.getFullYear()}-${day.getMonth() + 1}-${day.getDate()}`\r\n        day.setDate(day.getDate()-29)\r\n        const monthAgo = `${day.getFullYear()}-${day.getMonth() + 1}-${day.getDate()}`\r\n\r\n        fetch(`https://api.nasa.gov/planetary/apod?api_key=bQ3oevegUAlJR9OyWgYsSCbvp3eI0JJxWEymvQQn&thumbs=true&start_date=${ monthAgo }&end_date=${ today }`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // setting current apod\r\n                const { date, explanation, media_type, title, url } = data[data.length-1]\r\n                setApod({\r\n                    date: date,\r\n                    desc: explanation,\r\n                    type: media_type,\r\n                    title: title,\r\n                    url: url,\r\n                })\r\n                // storing last 30 in state\r\n                setPrevApod(data)\r\n                setLoading(false)\r\n            })\r\n\r\n        \r\n    }, [])\r\n\r\n    const handleClick = (previewData) => {\r\n        setApod(previewData)\r\n    }\r\n\r\n    const handleChange = () => {\r\n        setVisible(prevState => !prevState)\r\n        console.log(isVisible)\r\n    }\r\n\r\n    return (\r\n        <div className='mainBody'>\r\n            <Header />\r\n            { loading ? \r\n                <div className='loaderDiv'>\r\n                    <div className='loader'></div>\r\n                </div> : \r\n                <>\r\n                    <Apod data={ apod } />\r\n                    <button className='button' onClick={ handleChange }>{ isVisible ? 'Hide' : 'View' } last 30 days</button>\r\n                    \r\n                    <Last30 prev={ prevApod } handleClick={ handleClick } visible={isVisible} />\r\n                </>\r\n            }\r\n            <hr width='100%' color='#386480'/>\r\n            <Footer />\r\n            {isVisible && <a href='#top' className='button-a' >Back to top</a> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'))"],"sourceRoot":""}